{"mappings":"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","sources":["index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n\r\n    // Variables\r\n    const baseDeDatos = [\r\n        {\r\n            id: 1,\r\n            nombre: 'Figura',\r\n            precio: 100.000,\r\n            imagen: './img/figura.jpg'\r\n            \r\n        },\r\n        {\r\n            id: 2,\r\n            nombre: 'Mug',\r\n            precio: 50.000,\r\n            imagen: './img/mug.png'\r\n        },\r\n        {\r\n            id: 3,\r\n            nombre: 'Figura 2',\r\n            precio: 200.000,\r\n            imagen: './img/figura2.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            nombre: 'Figura 3',\r\n            precio: 300.000,\r\n            imagen: './img/figura3.jpg'\r\n        }\r\n\r\n    ];\r\n\r\n    let carrito = [];\r\n    const divisa = '$';\r\n    const DOMitems = document.querySelector('#items');\r\n    const DOMcarrito = document.querySelector('#carrito');\r\n    const DOMtotal = document.querySelector('#total');\r\n    const DOMbotonVaciar = document.querySelector('#boton-vaciar');\r\n    const miLocalStorage = window.localStorage;\r\n\r\n    // Funciones\r\n\r\n    /**\r\n    * Dibuja todos los productos a partir de la base de datos. No confundir con el carrito\r\n    */\r\n    function renderizarProductos() {\r\n        baseDeDatos.forEach((info) => {\r\n            // Estructura\r\n            const miNodo = document.createElement('div');\r\n            miNodo.classList.add('card', 'col-sm-4');\r\n            // Body\r\n            const miNodoCardBody = document.createElement('div');\r\n            miNodoCardBody.classList.add('card-body');\r\n            // Titulo\r\n            const miNodoTitle = document.createElement('h5');\r\n            miNodoTitle.classList.add('card-title');\r\n            miNodoTitle.textContent = info.nombre;\r\n            // Imagen\r\n            const miNodoImagen = document.createElement('img');\r\n            miNodoImagen.classList.add('img-fluid');\r\n            miNodoImagen.setAttribute('src', info.imagen);\r\n            // Precio\r\n            const miNodoPrecio = document.createElement('p');\r\n            miNodoPrecio.classList.add('card-text');\r\n            miNodoPrecio.textContent = `${info.precio}${divisa}`;\r\n            // Boton\r\n            const miNodoBoton = document.createElement('button');\r\n            miNodoBoton.classList.add('btn', 'btn-primary');\r\n            miNodoBoton.textContent = '+';\r\n            miNodoBoton.setAttribute('marcador', info.id);\r\n            miNodoBoton.addEventListener('click', anyadirProductoAlCarrito);\r\n            // Insertamos\r\n            miNodoCardBody.appendChild(miNodoImagen);\r\n            miNodoCardBody.appendChild(miNodoTitle);\r\n            miNodoCardBody.appendChild(miNodoPrecio);\r\n            miNodoCardBody.appendChild(miNodoBoton);\r\n            miNodo.appendChild(miNodoCardBody);\r\n            DOMitems.appendChild(miNodo);\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Evento para añadir un producto al carrito de la compra\r\n    */\r\n    function anyadirProductoAlCarrito(evento) {\r\n        // Anyadimos el Nodo a nuestro carrito\r\n        carrito.push(evento.target.getAttribute('marcador'))\r\n        // Actualizamos el carrito\r\n        renderizarCarrito();\r\n        // Actualizamos el LocalStorage\r\n        guardarCarritoEnLocalStorage();\r\n    }\r\n\r\n    /**\r\n    * Dibuja todos los productos guardados en el carrito\r\n    */\r\n    function renderizarCarrito() {\r\n        // Vaciamos todo el html\r\n        DOMcarrito.textContent = '';\r\n        // Quitamos los duplicados\r\n        const carritoSinDuplicados = [...new Set(carrito)];\r\n        // Generamos los Nodos a partir de carrito\r\n        carritoSinDuplicados.forEach((item) => {\r\n            // Obtenemos el item que necesitamos de la variable base de datos\r\n            const miItem = baseDeDatos.filter((itemBaseDatos) => {\r\n                // ¿Coincide las id? Solo puede existir un caso\r\n                return itemBaseDatos.id === parseInt(item);\r\n            });\r\n            // Cuenta el número de veces que se repite el producto\r\n            const numeroUnidadesItem = carrito.reduce((total, itemId) => {\r\n                // ¿Coincide las id? Incremento el contador, en caso contrario no mantengo\r\n                return itemId === item ? total += 1 : total;\r\n            }, 0);\r\n            // Creamos el nodo del item del carrito\r\n            const miNodo = document.createElement('li');\r\n            miNodo.classList.add('list-group-item', 'text-right', 'mx-2');\r\n            miNodo.textContent = `${numeroUnidadesItem} x ${miItem[0].nombre} - ${miItem[0].precio}${divisa}`;\r\n            // Boton de borrar\r\n            const miBoton = document.createElement('button');\r\n            miBoton.classList.add('btn', 'btn-danger', 'mx-5');\r\n            miBoton.textContent = 'X';\r\n            miBoton.style.marginLeft = '1rem';\r\n            miBoton.dataset.item = item;\r\n            miBoton.addEventListener('click', borrarItemCarrito);\r\n            // Mezclamos nodos\r\n            miNodo.appendChild(miBoton);\r\n            DOMcarrito.appendChild(miNodo);\r\n        });\r\n        // Renderizamos el precio total en el HTML\r\n        DOMtotal.textContent = calcularTotal();\r\n    }\r\n\r\n    /**\r\n    * Evento para borrar un elemento del carrito\r\n    */\r\n    function borrarItemCarrito(evento) {\r\n        // Obtenemos el producto ID que hay en el boton pulsado\r\n        const id = evento.target.dataset.item;\r\n        // Borramos todos los productos\r\n        carrito = carrito.filter((carritoId) => {\r\n            return carritoId !== id;\r\n        });\r\n        // volvemos a renderizar\r\n        renderizarCarrito();\r\n        // Actualizamos el LocalStorage\r\n        guardarCarritoEnLocalStorage();\r\n\r\n    }\r\n\r\n    /**\r\n     * Calcula el precio total teniendo en cuenta los productos repetidos\r\n     */\r\n    function calcularTotal() {\r\n        // Recorremos el array del carrito\r\n        return carrito.reduce((total, item) => {\r\n            // De cada elemento obtenemos su precio\r\n            const miItem = baseDeDatos.filter((itemBaseDatos) => {\r\n                return itemBaseDatos.id === parseInt(item);\r\n            });\r\n            // Los sumamos al total\r\n            return total + miItem[0].precio;\r\n        }, 0).toFixed(2);\r\n    }\r\n\r\n    /**\r\n    * Varia el carrito y vuelve a dibujarlo\r\n    */\r\n    function vaciarCarrito() {\r\n        // Limpiamos los productos guardados\r\n        carrito = [];\r\n        // Renderizamos los cambios\r\n        renderizarCarrito();\r\n        // Borra LocalStorage\r\n        localStorage.clear();\r\n\r\n    }\r\n\r\n    function guardarCarritoEnLocalStorage () {\r\n        miLocalStorage.setItem('carrito', JSON.stringify(carrito));\r\n    }\r\n\r\n    function cargarCarritoDeLocalStorage () {\r\n        // ¿Existe un carrito previo guardado en LocalStorage?\r\n        if (miLocalStorage.getItem('carrito') !== null) {\r\n            // Carga la información\r\n            carrito = JSON.parse(miLocalStorage.getItem('carrito'));\r\n        }\r\n    }\r\n\r\n    // Eventos\r\n    DOMbotonVaciar.addEventListener('click', vaciarCarrito);\r\n\r\n    // Inicio\r\n    cargarCarritoDeLocalStorage();\r\n    renderizarProductos();\r\n    renderizarCarrito();\r\n});"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}